(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{217:function(e,t,a){"use strict";a.r(t);var r=a(2),i=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"io-models"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io-models","aria-hidden":"true"}},[e._v("#")]),e._v(" IO Models")]),e._v(" "),a("h5",{attrs:{id:"date-2019-04-07"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-2019-04-07","aria-hidden":"true"}},[e._v("#")]),e._v(" Date: 2019/04/07")]),e._v(" "),a("br"),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"_60-seconds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_60-seconds","aria-hidden":"true"}},[e._v("#")]),e._v(" 60 seconds")]),e._v(" "),a("h4",{attrs:{id:"subtitle-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subtitle-1","aria-hidden":"true"}},[e._v("#")]),e._v(" Subtitle#1")]),e._v(" "),a("br"),e._v(" "),a("h2",{attrs:{id:"_60-minutes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_60-minutes","aria-hidden":"true"}},[e._v("#")]),e._v(" 60 minutes")]),e._v(" "),a("h3",{attrs:{id:"unix-networking-i-o-models"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unix-networking-i-o-models","aria-hidden":"true"}},[e._v("#")]),e._v(" UNIX networking I/O models")]),e._v(" "),a("p",[e._v("首先來看一下UNIX這本書上對I/O模型的介紹:")]),e._v(" "),a("blockquote",[a("p",[e._v("There are normally two distinct phases for\nan input operation:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Waiting for the data to be ready")])]),e._v(" "),a("li",[a("p",[e._v("Copying the data from the kernel to the process")])])])]),e._v(" "),a("p",[e._v("IO發生時通常會有兩個階段, "),a("strong",[e._v("等待資料準備好")]),e._v(" 及 "),a("strong",[e._v("將資料從核心(kernel)中複製到行程中(process)")]),e._v(".")]),e._v(" "),a("p",[e._v("以socket上的IO來說, 第一步是等待資料抵達; 當封包抵達以後, 把它複製到核心裡的緩衝區(kernel buffer).\n第二步才是再把資料從核心緩衝區複製到應用程式的緩衝區裡.")]),e._v(" "),a("p",[e._v("因為這兩階段中的不同情況, 於是有了下列的5種I/O模型:")]),e._v(" "),a("br"),e._v(" "),a("ul",[a("li",[e._v("Blocking I/O 阻塞式IO")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/2d17e41441c8e68ca4a6821001854913e331c54133df21edd496523c6075cd27.png",alt:"blocking",title:"Blocking I/O model"}})]),e._v(" "),a("p",[e._v("書上有特別提到使用UDP當作範例的原因:")]),e._v(" "),a("blockquote",[a("p",[e._v("We use UDP for this example instead of TCP because with UDP,")]),e._v(" "),a("p",[e._v('the concept of data being\n"ready" to read is simple: either an entire datagram has been received or it has not. With\nTCP it gets more complicated, as additional variables such as the socket\'s low-water mark\ncome into play.')])]),e._v(" "),a("p",[e._v("相較於TCP, UDP在 "),a("strong",[e._v("資料準備好被讀取")]),e._v("的概念比較簡單, 只要考慮資料接受與否即可;\nTCP比較複雜, 還會牽扯到一些額外的變數等等.")]),e._v(" "),a("p",[e._v("在表中,可以看到這個行程呼叫了 "),a("strong",[e._v("recvfrom")]),e._v(" 並執行了系統呼叫 (system call);\n可是一直到資料傳送跟複製資料到緩衝區的動作完成之前, 或是錯誤發生, kernel才會回傳結果,\n這個行程才會解除阻塞狀態, 繼續運行下去.")]),e._v(" "),a("blockquote",[a("p",[e._v("We say that our process is blocked the entire time from when it calls recvfrom until it\nreturns.")]),e._v(" "),a("p",[e._v("When recvfrom returns successfully, our application processes the datagram.")])]),e._v(" "),a("p",[e._v("整個行程在 "),a("strong",[e._v("recvfrom")]),e._v("回傳成功之前都是阻塞的狀態, 只有"),a("strong",[e._v("recvfrom")]),e._v("回傳成功, 應用程式才會繼續處理資料.")]),e._v(" "),a("br"),e._v(" "),a("ul",[a("li",[e._v("Nonblocking I/O")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/64f94a916b338d380d953ee7f144a1694252abe87e3e62b07e14301cd1e7825d.png",alt:"non-blocking"}})]),e._v(" "),a("ul",[a("li",[e._v("I/O multiplexing (select and poll)")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/a524eac80b80ffc018295d5d0a635068bd7fae111c6e7f0c1f0006f50f4205cd.png",alt:"I/O multiplexing (select and poll)",title:"I/O multiplexing"}})]),e._v(" "),a("ul",[a("li",[e._v("Signal-Driven I/O (SIGIO)")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/0476506e7b93e82d3f6c05f13ecab2d174ab6c33234d9b35c477b0b16a1c92dc.png",alt:"Signal driven I/O",title:"Signal driven I/O"}})]),e._v(" "),a("p",[e._v("Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")]),e._v(" "),a("ul",[a("li",[e._v("Asynchronous I/O (the POSIX aio_functions)")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/9a725fe7d43dfdeda3e49c72a9d28332624c9ef43cf7c85dea3a0c871b66f8d4.png",alt:"Asynchronous I/O",title:"Asynchronous I/O"}})]),e._v(" "),a("p",[e._v("Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")]),e._v(" "),a("p",[e._v("一次5種IO模型的比較")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/1a308013c3e7b257a863e230ca51b8adc49bda8ef6360181bf97943de914961b.png",alt:"comparison",title:"Comparison"}})]),e._v(" "),a("p",[e._v("首先來看一下恐龍本裡面, 對上列4個IO模型的說明:")]),e._v(" "),a("br"),e._v(" "),a("p",[a("img",{attrs:{src:"/images/2019/april/3e9d19e1edb50b83f1c5ff8fffab1113cadaea87c7dd657b3522d0af6cbe4ee7.png",alt:"Operating System Concepts 10e - 3.6.2 Synchronization",title:"Operating System Concepts 10e - 3.6.2 Synchronization"}})]),e._v(" "),a("br"),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[e._v("#")]),e._v(" References")]),e._v(" "),a("br"),e._v(" "),a("h4",{attrs:{id:"其他參考資料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他參考資料","aria-hidden":"true"}},[e._v("#")]),e._v(" 其他參考資料")]),e._v(" "),a("p",[e._v("Carl. (2018, Jan 31). "),a("a",{attrs:{href:"https://medium.com/@clu1022/%E6%B7%BA%E8%AB%87i-o-model-32da09c619e6",target:"_blank",rel:"noopener noreferrer"}},[e._v("淺談I/O Model"),a("OutboundLink")],1),e._v(". Medium.")]),e._v(" "),a("p",[e._v("xianyunyh. (2018, Dec 29). "),a("a",{attrs:{href:"https://github.com/xianyunyh/PHP-Interview/blob/master/Linux/LinuxIO%E6%A8%A1%E5%9E%8B.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP-Interview - LinuxIO模型.md"),a("OutboundLink")],1),e._v(". xianyunyh/PHP-Interview.")]),e._v(" "),a("p",[e._v("calidion. (2016, Jul 8). "),a("a",{attrs:{href:"https://github.com/calidion/calidion.github.io/issues/40",target:"_blank",rel:"noopener noreferrer"}},[e._v("同步，异步，阻塞，非阻塞等关系轻松理解 #40"),a("OutboundLink")],1),e._v(". calidion/calidion.github.io.")]),e._v(" "),a("p",[e._v("Stevens, R & Fenner, B & Rudoff, A (2003, Nov 21). "),a("a",{attrs:{href:"https://www.amazon.com/Unix-Network-Programming-Sockets-Networking/dp/0131411551",target:"_blank",rel:"noopener noreferrer"}},[e._v("UNIX Network Programming Volume 1, Third Edition: The Sockets Networking API"),a("OutboundLink")],1),e._v(". Amazon.")]),e._v(" "),a("p",[e._v("Silberschatz, A & Galvin, P (2018, May 2). "),a("a",{attrs:{href:"https://www.amazon.com/Operating-System-Concepts-Abridged-Companion/dp/1119456339/ref=sr_1_fkmrnull_1?keywords=Operating+System+Concepts+10e&qid=1554626354&s=books&sr=1-1-fkmrnull",target:"_blank",rel:"noopener noreferrer"}},[e._v("Operating System Concepts 10e"),a("OutboundLink")],1),e._v(". Amazon.")]),e._v(" "),a("p",[e._v("[Title](href link)")])])},[],!1,null,null,null);t.default=i.exports}}]);