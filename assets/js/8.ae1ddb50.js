(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{217:function(e,t,r){"use strict";r.r(t);var a=r(2),n=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"io-models"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#io-models","aria-hidden":"true"}},[e._v("#")]),e._v(" IO Models")]),e._v(" "),r("h5",{attrs:{id:"date-2019-04-07"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#date-2019-04-07","aria-hidden":"true"}},[e._v("#")]),e._v(" Date: 2019/04/07")]),e._v(" "),r("br"),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"_60-seconds"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_60-seconds","aria-hidden":"true"}},[e._v("#")]),e._v(" 60 seconds")]),e._v(" "),r("h3",{attrs:{id:"operating-system-concepts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#operating-system-concepts","aria-hidden":"true"}},[e._v("#")]),e._v(" Operating System Concepts")]),e._v(" "),r("br"),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/3e9d19e1edb50b83f1c5ff8fffab1113cadaea87c7dd657b3522d0af6cbe4ee7.png",alt:"Operating System Concepts 10e - 3.6.2 Synchronization",title:"Operating System Concepts 10e - 3.6.2 Synchronization"}})]),e._v(" "),r("br"),e._v(" "),r("h2",{attrs:{id:"_60-minutes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_60-minutes","aria-hidden":"true"}},[e._v("#")]),e._v(" 60 minutes")]),e._v(" "),r("h3",{attrs:{id:"unix-networking-i-o-models"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unix-networking-i-o-models","aria-hidden":"true"}},[e._v("#")]),e._v(" UNIX networking I/O models")]),e._v(" "),r("p",[e._v("首先來看一下UNIX這本書上對I/O模型的介紹:")]),e._v(" "),r("blockquote",[r("p",[e._v("There are normally two distinct phases for"),r("br"),e._v("\nan input operation:")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Waiting for the data to be ready")])]),e._v(" "),r("li",[r("p",[e._v("Copying the data from the kernel to the process")])])])]),e._v(" "),r("p",[e._v("IO發生時通常會有兩個階段, "),r("strong",[e._v("等待資料準備好")]),e._v(" 及 "),r("strong",[e._v("將資料從 "),r("abbr",{attrs:{title:"Kernel"}},[e._v("核心")]),e._v(" 中複製到 "),r("abbr",{attrs:{title:"Process"}},[e._v("行程")]),e._v(" 中")]),e._v(".")]),e._v(" "),r("p",[e._v("以socket上的IO來說, 第一步是等待資料抵達; 當封包抵達以後, 把它複製到 "),r("abbr",{attrs:{title:"Kernel"}},[e._v("核心")]),e._v(" 裡的緩衝區(kernel buffer)."),r("br"),e._v("\n第二步才是再把資料從核心緩衝區複製到應用程式的緩衝區裡.")]),e._v(" "),r("p",[e._v("因為這兩階段中的不同情況, 於是有了下列的5種I/O模型:")]),e._v(" "),r("br"),e._v(" "),r("ul",[r("li",[e._v("Blocking I/O 阻塞式IO")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/2d17e41441c8e68ca4a6821001854913e331c54133df21edd496523c6075cd27.png",alt:"blocking",title:"Blocking I/O model"}})]),e._v(" "),r("p",[e._v("書上有特別提到使用UDP當作範例的原因:")]),e._v(" "),r("blockquote",[r("p",[e._v("We use UDP for this example instead of TCP because with UDP,")]),e._v(" "),r("p",[e._v("the concept of data being"),r("br"),e._v('\n"ready" to read is simple: either an entire datagram has been received or it has not. With'),r("br"),e._v("\nTCP it gets more complicated, as additional variables such as the socket's low-water mark"),r("br"),e._v("\ncome into play.")])]),e._v(" "),r("p",[e._v("相較於TCP, UDP在 "),r("strong",[e._v("資料準備好被讀取")]),e._v("的概念比較簡單, 只要考慮資料接受與否即可;"),r("br"),e._v("\nTCP比較複雜, 還會牽扯到一些額外的變數等等.")]),e._v(" "),r("p",[e._v("在表中,可以看到這個行程呼叫了 "),r("strong",[e._v("recvfrom")]),e._v(" 並執行了系統呼叫 ;"),r("br"),e._v("\n可是一直到資料傳送跟複製資料到緩衝區的動作完成之前, 或是錯誤發生, "),r("abbr",{attrs:{title:"Kernel"}},[e._v("內核")]),e._v(" 才會回傳結果,"),r("br"),e._v("\n這個行程才會解除阻塞狀態, 繼續運行下去.")]),e._v(" "),r("blockquote",[r("p",[e._v("We say that our process is blocked the entire time from when it calls recvfrom until it"),r("br"),e._v("\nreturns.")]),e._v(" "),r("p",[e._v("When recvfrom returns successfully, our application processes the datagram.")])]),e._v(" "),r("p",[e._v("整個 "),r("abbr",{attrs:{title:"Process"}},[e._v("行程")]),e._v(" 在 "),r("strong",[e._v("recvfrom")]),e._v("回傳成功之前都是阻塞的狀態, 只有"),r("strong",[e._v("recvfrom")]),e._v("回傳成功, 應用程式才會繼續處理資料.")]),e._v(" "),r("br"),e._v(" "),r("ul",[r("li",[e._v("Nonblocking I/O 非阻塞IO")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/64f94a916b338d380d953ee7f144a1694252abe87e3e62b07e14301cd1e7825d.png",alt:"non-blocking"}})]),e._v(" "),r("blockquote",[r("p",[e._v('When we set a socket to be nonblocking, we are telling the kernel "when an I/O operation'),r("br"),e._v("\nthat I request cannot be completed without putting the process to "),r("abbr",{attrs:{title:"使process/thread暫停一段時間"}},[e._v("sleep")]),e._v(", do not put the"),r("br"),e._v("\nprocess to "),r("abbr",{attrs:{title:"使process/thread暫停一段時間"}},[e._v("sleep")]),e._v(', but return an error instead."')])]),e._v(" "),r("p",[e._v('當socket被設為非阻塞IO時, 其實就是告訴內核"當一個IO請求在不讓行程 '),r("strong",[r("abbr",{attrs:{title:"使process/thread暫停一段時間"}},[e._v("sleep")])]),e._v(' 的情況下便無法完成時, 以回傳錯誤代替讓行程睡眠".')]),e._v(" "),r("p",[e._v("如上圖所示, 可以看到前三次呼叫"),r("strong",[e._v("recvfrom")]),e._v("時, 資料都還沒準備好, 內核這時候會馬上回傳 "),r("strong",[e._v("EWOULDBLOCK")]),e._v(".")]),e._v(" "),r("br"),e._v(" "),r("p",[e._v("✍️ Linux手冊上對EWOULDBLOCK的說明:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Error name")]),e._v(" "),r("th",[e._v("Meaning")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("EAGAIN")]),e._v(" "),r("td",[e._v("Resource temporarily unavailable (may be the same value as EWOULDBLOCK)")])]),e._v(" "),r("tr",[r("td",[e._v("EWOULDBLOCK")]),e._v(" "),r("td",[e._v("Operation would block (may be same value as EAGAIN)")])])])]),e._v(" "),r("br"),e._v(" "),r("p",[e._v("第4次呼叫"),r("strong",[e._v("recvfrom")]),e._v("時, 資料準備好了並複製到應用程式緩衝區中, 此時"),r("strong",[e._v("recvfrom")]),e._v("回傳成功, 程式開始處理回傳的資料."),r("br"),e._v("\n像這種程式一直在迴圈當中等待呼叫成功就叫做 "),r("strong",[e._v("polling")]),e._v("; 它會不斷地去詢問核心資料好了沒, 極為耗費CPU時間.")]),e._v(" "),r("ul",[r("li",[e._v("I/O multiplexing (select and poll)")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/a524eac80b80ffc018295d5d0a635068bd7fae111c6e7f0c1f0006f50f4205cd.png",alt:"I/O multiplexing (select and poll)",title:"I/O multiplexing"}})]),e._v(" "),r("ul",[r("li",[e._v("Signal-Driven I/O (SIGIO)")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/0476506e7b93e82d3f6c05f13ecab2d174ab6c33234d9b35c477b0b16a1c92dc.png",alt:"Signal driven I/O",title:"Signal driven I/O"}})]),e._v(" "),r("p",[e._v("Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")]),e._v(" "),r("ul",[r("li",[e._v("Asynchronous I/O (the POSIX aio_functions)")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/9a725fe7d43dfdeda3e49c72a9d28332624c9ef43cf7c85dea3a0c871b66f8d4.png",alt:"Asynchronous I/O",title:"Asynchronous I/O"}})]),e._v(" "),r("p",[e._v("Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")]),e._v(" "),r("p",[e._v("一次5種IO模型的比較")]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/2019/april/1a308013c3e7b257a863e230ca51b8adc49bda8ef6360181bf97943de914961b.png",alt:"comparison",title:"Comparison"}})]),e._v(" "),r("br"),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"references"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[e._v("#")]),e._v(" References")]),e._v(" "),r("p",[e._v('[ref#man-ERRNO(3)]:  "Linux Programmer\'s Manual - ERRNO(3) / EWOULDBLOCK"')]),e._v(" "),r("br"),e._v(" "),r("h4",{attrs:{id:"其他參考資料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他參考資料","aria-hidden":"true"}},[e._v("#")]),e._v(" 其他參考資料")]),e._v(" "),r("p",[e._v("Carl. (2018, Jan 31). "),r("a",{attrs:{href:"https://medium.com/@clu1022/%E6%B7%BA%E8%AB%87i-o-model-32da09c619e6",target:"_blank",rel:"noopener noreferrer"}},[e._v("淺談I/O Model"),r("OutboundLink")],1),e._v(". Medium.")]),e._v(" "),r("p",[e._v("xianyunyh. (2018, Dec 29). "),r("a",{attrs:{href:"https://github.com/xianyunyh/PHP-Interview/blob/master/Linux/LinuxIO%E6%A8%A1%E5%9E%8B.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP-Interview - LinuxIO模型.md"),r("OutboundLink")],1),e._v(". xianyunyh/PHP-Interview.")]),e._v(" "),r("p",[e._v("calidion. (2016, Jul 8). "),r("a",{attrs:{href:"https://github.com/calidion/calidion.github.io/issues/40",target:"_blank",rel:"noopener noreferrer"}},[e._v("同步，异步，阻塞，非阻塞等关系轻松理解 #40"),r("OutboundLink")],1),e._v(". calidion/calidion.github.io.")]),e._v(" "),r("p",[e._v("Stevens, R & Fenner, B & Rudoff, A (2003, Nov 21). "),r("a",{attrs:{href:"https://www.amazon.com/Unix-Network-Programming-Sockets-Networking/dp/0131411551",target:"_blank",rel:"noopener noreferrer"}},[e._v("UNIX Network Programming Volume 1, Third Edition: The Sockets Networking API"),r("OutboundLink")],1),e._v(". Amazon.")]),e._v(" "),r("p",[e._v("Silberschatz, A & Galvin, P (2018, May 2). "),r("a",{attrs:{href:"https://www.amazon.com/Operating-System-Concepts-Abridged-Companion/dp/1119456339/ref=sr_1_fkmrnull_1?keywords=Operating+System+Concepts+10e&qid=1554626354&s=books&sr=1-1-fkmrnull",target:"_blank",rel:"noopener noreferrer"}},[e._v("Operating System Concepts 10e"),r("OutboundLink")],1),e._v(". Amazon.")]),e._v(" "),r("p",[e._v("Linux Programmer's Manual (2017, Sep 15). "),r("a",{attrs:{href:"http://man7.org/linux/man-pages/man3/sleep.3.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLEEP(3)"),r("OutboundLink")],1),e._v(" Linux Programmer's Manual.")]),e._v(" "),r("p",[e._v("Linux Programmer's Manual (2017, Mar 06). "),r("a",{attrs:{href:"http://man7.org/linux/man-pages/man3/errno.3.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ERRNO(3)"),r("OutboundLink")],1),e._v(" Linux Programmer's Manual.")]),e._v(" "),r("p",[e._v("[Title](href link)")])])},[],!1,null,null,null);t.default=n.exports}}]);